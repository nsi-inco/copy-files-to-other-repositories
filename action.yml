name: Copy Files to Team Repositories
description: This action enables you to copy/update/remove files from one repo to multiple other repos automatically in one shot.
inputs:
  github_token:
    description: >
      Token to use GitHub API. It must have "repo" and "workflow" scopes so it can push to repo and edit workflows.
      It cannot be the default GitHub Actions token GITHUB_TOKEN. GitHub Action token's permissions are limited to the repository that contains your workflows.
      Provide token of the user that has rights to push to the repos that this action is suppose to update.
    required: true
  committer_username:
    description: >
      The username (not display name) of the committer that will be used in the commit of changes in the workflow file in specific repository.
      In the format `web-flow`.
    default: web-flow
    required: false
  committer_email:
    description: >
      The email of the committer that will be used in the commit of changes in the workflow file in specific repository.
      In the format `noreply@github.com`.
    default: noreply@github.com
    required: false
  commit_message:
    description: >
      It is used as a commit message when pushing changes with global workflows.
      It is also used as a title of the pull request that is created by this action.
    default: Update global workflows
    required: false
  patterns_to_ignore:
    description: >
      Comma-separated list of file paths or directories that should be handled by this action and updated in other repositories.
      This option is useful if you use "patterns_to_include" or "patterns_to_remove" with large amount of files, and some of them you want to ignore.
      In the format `./github/workflows/another_file.yml`.
    required: true
  patterns_to_remove:
    description: >
      Comma-separated list of file paths or directories that should be handled by this action and removed from other repositories. This option do not perform any removal of files that are located in repository there this action is used.
      This option cannot be used at the same time with "patterns_to_include", these fields are mutually exclusive.
      In the format `./github/workflows`.
    required: true
  patterns_to_include:
    description: >
      Comma-separated list of file paths or directories that should be handled by this action and copied or updated in other repositories.
      This option cannot be used at the same time with "patterns_to_remove", these fields are mutually exclusive.
      In the format `.github/workflows`.
    required: true
  repos_to_ignore:
    description: >
      Comma-separated list of repositories that should not get updates from this action.
      Action already ignores the repo in which the action is triggered so you do not need to add it explicitly.
      In the format `repo1,repo2`.
    required: false
  topics_to_include:
    description: >
      Comma-separated list of topics that should get updates from this action.
      Repos that do not contain one of the specified topics will get appended to the repos_to_ignore list.
      In the format topic1,topic2.
    required: false
  exclude_private:
    description: >
      Boolean value on whether to exclude private repositories from this action.
    default: false
    required: false
  exclude_forked:
    description: >
      Boolean value on whether to exclude forked repositories from this action.
    default: false
    required: false
  branches:
    description: >
      By default, action creates branch from default branch and opens PR only against default branch.
      With this property you can override this behaviour. You can provide a comma-separated list of branches this action shoudl work agains.
      You can also provide regex, but without comma as list of branches is split in code by comma.
    required: false
  destination:
    description: >
      Name of the directory where all files matching "patterns_to_include" will be copied. It doesn't work with "patterns_to_remove". In the format `.github/workflows`.
    required: false
  bot_branch_name:
    description: >
      Use it if you do not want this action to create a new branch and new pull request with every run. By default branch names are generated. This means every single change is a separate commit. Such a static hardcoded branch name has an advantage that if you make a lot of changes, instead of having 5 PRs merged with 5 commits, you get one PR that is updated with new changes as long as the PR is not yet merged. If you use static name, and by mistake someone closed a PR, without merging and removing branch, this action will not fail but update the branch and open a new PR. Example value that you could provide: `bot_branch_name: bot/update-files-from-global-repo`.
    required: false
  team:
    description: >
      Team inside organisation to run against
    required: false
runs:
  using: node16
  main: dist/index.js
branding:
  icon: compass
  color: gray-dark
